#
# Copyright 2019, Ridecell, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cluster-autoscaler
rules:
- apiGroups: [""]
  resources: [events, endpoints]
  verbs: [create, patch]
- apiGroups: [""]
  resources: [pods/eviction]
  verbs: [create]
- apiGroups: [""]
  resources: [pods/status]
  verbs: [update]
- apiGroups: [""]
  resources: [endpoints]
  resourceNames: [cluster-autoscaler]
  verbs: [get, update]
- apiGroups: [""]
  resources: [nodes]
  verbs: [watch, list, get, update]
- apiGroups: [""]
  resources: [pods, services, replicationcontrollers, persistentvolumeclaims, persistentvolumes]
  verbs: [watch, list, get]
- apiGroups: [batch]
  resources: [jobs, cronjobs]
  verbs: [watch, list, get]
- apiGroups: [extensions]
  resources: [replicasets, daemonsets]
  verbs: [watch, list, get]
- apiGroups: [policy]
  resources: [poddisruptionbudgets]
  verbs: [watch, list]
- apiGroups: [apps]
  resources: [replicasets, statefulsets]
  verbs: [watch, list, get]
- apiGroups: [storage.k8s.io]
  resources: [storageclasses]
  verbs: [watch, list, get]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: cluster-autoscaler
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: [configmaps]
    verbs: [create]
  - apiGroups: [""]
    resources: [configmaps]
    resourceNames: [cluster-autoscaler-status]
    verbs: [delete, get, update]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: cluster-autoscaler
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-autoscaler
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-autoscaler
  template:
    metadata:
      labels:
        app: cluster-autoscaler
    spec:
      serviceAccountName: cluster-autoscaler
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
      - name: default
        image: k8s.gcr.io/cluster-autoscaler:v1.13.2
        command:
        - ./cluster-autoscaler
        - --cloud-provider=aws
        - --namespace=kube-system
        - --node-group-auto-discovery=asg:tag=KubernetesCluster=$(CLUSTER_NAME)
        - --expander=most-pods
        - --v=4
        - --stderrthreshold=info
        - --logtostderr=true
        env:
        - name: AWS_REGION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['ridecell.io/cloud-region']
        - name: CLUSTER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['ridecell.io/cluster-name']
        livenessProbe:
          httpGet:
            path: /health-check
            port: 8085
        readinessProbe:
          httpGet:
            path: /health-check
            port: 8085
        ports:
        - containerPort: 8085
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
---
